環境構築
    vagrant, homestead,
        https://qiita.com/7968/items/68b3566d92d2b007038e
        2023-02-05 試みるも動かない

    dockerの利用
        https://simablog.net/docker-laravel-nginx-mysql/

    artisanのインストール
        ```
        composer install
        ```

    暗号鍵の生成
        ```
        php artisan key:generate
        ```

クラス構造
    参考
        https://github.com/Kovah/LinkAce/tree/main
        https://github.com/slimkit/plus/tree/2.4

ルーティング
    Route::get(
        '/folders/{id}/tasks', //リクエストパス指定
        'TaskController@index') //TaskControllerのindexメソッドを呼び出す
        ->name('tasks.index'); //

ミドルウェア
    ミドルウェアは、Webアプリケーションに送信されたリクエストを受け取った直後に実行される「フィルター」のようなもので、リクエストに対して必要な処理を行い、それを正しい方向に導く役割を担っています。
    具体的には、ログイン機能があるWebアプリケーションでは、アクセスしたユーザーがログインしているかどうかをチェックするためのミドルウェアを定義することができます。

Controller
    [概要]
        Controllerクラスはアプリケーションのロジックの実装とリクエストの処理に関連しています。
    [役割]
        Controllerクラスは、Laravelアプリケーションのロジックを実装するためのクラスです。コントローラーは、リクエストの受け取りとレスポンスの返却を担当し、アプリケーションの振る舞いやビジネスロジックを制御します。
        Controllerクラスは、ルートと直接対話し、リクエストに応じた処理を実行します。リクエストデータや他の依存オブジェクト（例: データベースモデル、サービスクラス）を利用して、必要なデータの取得や処理を行います。また、コントローラーはビューをレンダリングしたり、JSONや他の形式のレスポンスを返したりする責任も持っています。
    []
    作成
        php artisan make:controller TaskController //雛形で作成する

Requestクラス
    [概要]
        Requestクラスはリクエストデータの取得と操作に関連し、Controllerクラスはアプリケーションのロジックの実装とリクエストの処理に関連しています。
        Requestクラスはコントローラーにリクエストデータを提供し、コントローラーはそれを使用してアプリケーションの動作を制御します。
    [役割]
        入力データの取得、バリデーション、ファイルのアップロードなど、リクエスト処理に関連するタスクを簡素化するために使用されます。
    [操作]
        作成
            php artisan make:request　<class名>

            パス
                Auth/LoginRequest.php

        命名例
            https://github.com/Bottelet/DaybydayCRM/tree/master

DB操作
    追加･更新
        save()
        ```
        $flight = new Flight;

        $flight->name = $request->name;

        $flight->save();
        ```

    新規作成
        create()

アロー演算子 (->)
    左辺から右辺を取り出す演算子
    オブジェクトからプロパティやメソッドを呼び出すときに使う。
    矢印「->」の後に続けるプロパティ名は「$」を付与せずに書く
    ```
    class fruit {
        $apple = "りんご"
        $melon = "メロン"
    }

    fruit->$apple //りんご
    ```

ダブルアロー演算子 (=>)
    連想配列でKey（キー）に対してValue（値）を指定するときに使う。
    ```
    $arr = [
        'key1' => 'val1',
        'key2' => 'val2',
    ];

    echo $arr['key1'];
    ```